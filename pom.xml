<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <!--
      | Spring Boot Sürümü | Spring Cloud Sürümü (Release Train)
      | ++++++++++++++++++ | +++++++++++++++++++++++++++++++++++++++++
      | 2.4.x              | 2020.0.x (Kod adı: Ilford)
      | 2.5.x - 2.7.x      | 2021.x (Kod adı: Jubilee)
      | 3.0.x - 3.2.x      | 2022.x (Kod adı: Kilburn)
      | 3.3.x ve sonrası   | 2023.x ve sonrası
    -->

    <!--modelVersion-->
    <modelVersion>4.0.0</modelVersion>

    <!--parent root pom icin bunlar cok önemli-->
    <!--alt sınıflarda <parent></parent> iceriğine aşağıdakiler yazılır-->
    <groupId>com.hamitmizrak.microservice</groupId>
    <artifactId>parent_pom</artifactId>
    <version>v1.0.0</version>
    <packaging>pom</packaging>

    <!-- servislerimi buraya ekleyecegim-->
    <!--ilgili servisin artifactId: address-service-->
    <modules>
        <module>address-service</module>
        <module>customer-service</module>
    </modules>

    <!--properties-->
    <properties>
        <encoding>UTF-8</encoding>
        <java.version>17</java.version>

        <!--for maven-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!--Jenkins - SonarQube - Ve Maven İçin Gerekli-->
        <maven.compiler.release>17</maven.compiler.release>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>

        <!--Libraries Version-->
        <modelmapper.version>2.4.4</modelmapper.version>
        <gson.version>2.8.6</gson.version>
        <swagger.version>2.0.3</swagger.version>

        <!--Microservice-->
        <!-- Spring Boot version: 3.3.1-->
        <spring.boot.version>3.3.1</spring.boot.version>
        <!-- Spring Cloud Version : 2023.0.3 -->
        <spring-cloud.version>2023.0.3</spring-cloud.version>
        <spring.cloud.config.enabled>true</spring.cloud.config.enabled>
    </properties>


    <!--dependencies-->
    <dependencies>

        <!-- #### MICROSERVICE COMMON DEPENDENCY #################################################  -->
        <!--spring-boot-starter-web-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>

        <!--actuator-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!--Config Client-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>

        <!--Eureka Client-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>

        <!-- Gateway icin netflix-eureka-client eklemeliyiz -->
     <!-- <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-gateway</artifactId>
        </dependency>-->

        <!-- #### ÖNEMLİ KÜTÜPHANLER #################################################  -->
        <!-- #### MVC/API #################################################  -->
        <!--Templates thymeleaf-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <!--Swagger For Spring Boot 3+ :-->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${swagger.version}</version>
        </dependency>

        <!--lombok-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!--Validation-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- model mapper -->
        <dependency>
            <groupId>org.modelmapper</groupId>
            <artifactId>modelmapper</artifactId>
            <version>${modelmapper.version}</version>
        </dependency>

        <!-- processor -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- #### DATABASE #################################################  -->
        <!-- Spring data-jpa-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!-- JDBC Template-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>

        <!-- #### SECURITY #################################################  -->
        <!--security-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-springsecurity6</artifactId>
        </dependency>

        <!-- #### TEST #################################################  -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!--dependencyManagement-->
    <!--
    dependencyManagement, bağımlılıkların sürüm yönetimini sağlar.
    Bu bölümde tanımlanan sürümler, alt bağımlılıklar tarafından otomatik olarak kullanılır.
    -->
    <dependencyManagement>
        <!--spring.boot.version-->
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- spring-cloud-dependencies-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <!--build-->
    <build>
        <!--apache tomcat manuel deployment için-->
        <defaultGoal>spring-boot:run</defaultGoal>
        <finalName>${project.artifactId}</finalName>

        <plugins>
        <!--
        mvn clean install :
        -->
        <!-- plugins: Derleme ve paketleme işlemlerinde kullanılacak Maven eklentilerini tanımlar -->
            <!-- Maven Compiler Plugin, kaynak kodunu belirli bir Java sürümünde derlemek için kullanılır -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <!-- source: Kaynak kodunun yazıldığı Java sürümünü belirtir, burada Java 17 olarak ayarlanmıştır -->
                    <source>17</source>
                    <!-- target: Derlenen kodun çalışacağı Java sürümünü belirtir, burada Java 17 olarak ayarlanmıştır -->
                    <target>17</target>
                </configuration>
            </plugin>

            <!--spring-boot-maven icin cok gerekli-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
